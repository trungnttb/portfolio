---
import { getCollection } from 'astro:content';
import BlogPost from '../../components/astro/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  const uniqueTags = [...new Set(posts.flatMap((post) => post.data.tags))];

  return uniqueTags.map((tag) => {
    const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// Sort posts by most recent date
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const metadata = {
  pageTitle: `Topic: ${tag}`,
  description: `All posts about ${tag}`,
  type: 'tag',
};
---

<BaseLayout {...metadata}>
  <main class="max-w-4xl mx-auto px-4 py-12">
    <div class="mb-12">
      <h1 class="text-4xl font-bold mb-4 text-gray-900 dark:text-gray-100">
        Topic: <span class="text-primary-600 dark:text-primary-400">{tag}</span>
      </h1>
      <p class="text-gray-600 dark:text-gray-400 mb-8">
        {posts.length} posts in this topic
      </p>
    </div>

    <div class="space-y-8">
      {
        sortedPosts.map((post) => (
          <BlogPost
            title={post.data.title}
            url={`/notes/${post.slug}`}
            pubDate={post.data.pubDate}
            description={post.data.description}
            tags={post.data.tags}
          />
        ))
      }
    </div>
  </main>
</BaseLayout>
